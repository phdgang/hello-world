NAME: nsm-without-spire
LAST DEPLOYED: Sun Feb  9 05:31:06 2020
NAMESPACE: default
STATUS: pending-install
REVISION: 1
TEST SUITE: None
USER-SUPPLIED VALUES:
{}

COMPUTED VALUES:
admission-webhook:
  global:
    JaegerTracing: false
  org: networkservicemesh
  pullPolicy: IfNotPresent
  registry: docker.io
  tag: master
config:
  global:
    JaegerTracing: false
forwardingPlane: vpp
global:
  JaegerTracing: false
insecure: false
kernel:
  image: kernel-forwarder
  resources:
    limitCPU: 1
    requestsCPU: 1m
metricsCollectorEnabled: false
org: networkservicemesh
prefix-service:
  global:
    JaegerTracing: false
  org: networkservicemesh
  pullPolicy: IfNotPresent
  registry: docker.io
  serviceAccount:
    name: nsmgr-acc
  tag: master
pullPolicy: IfNotPresent
registry: docker.io
spire:
  azure: false
  enabled: false
  global:
    JaegerTracing: false
  namespace: spire
  org: networkservicemesh
  pullPolicy: IfNotPresent
  registry: docker.io
  selfSignedCA: true
  tag: master
tag: master
vpp:
  image: vppagent-forwarder

HOOKS:
MANIFEST:
---
# Source: nsm/charts/admission-webhook/templates/admission-webhook-secret.tpl
apiVersion: v1
kind: Secret
metadata:
  name: nsm-admission-webhook-certs
  namespace: default
type: Opaque
data:
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBMnlhTzZObFEwV3AvYnlXYWQ0NFRaQ21jN1NYaERkT3VUOERmTTVZOWhxM1JmVEFLClNTT3I2TWZYbWNGek9JQVdSbnl0L2Z0WjZNZW1zeXR4TkJxUUpYMGl3Sm9NSkpZSG5ucUlpRG5kOFBkcHNYNUYKbVZZMXFkT0JKY0pyMElVUS8xMThaL3E2emdkaVdqemxPYWZDOGZDYURUai8vaDB4Y2JiV29JdjZnS1k3SDdaQgpqdDAvNkl5cktqcVUrVTNpN2UvV3ZKMzVQVnVwRUxpd09SbW4zUjdkWjNDN1RJcE5WYjZkUWtsM3Y2OGdWZ2ZaCmRhME5ORzNXdkRIYURMSkk4Q29LTHQ1azNlblB6dGNYVTNiQVpEdjljRTZNeWpqRTZrTFZmWDg1Zzd3ZkJEdE0KakpEM0hHMmI4TE40UUhhZm9WalZPK2NnZEV4dXRQbERoV01nc1FJREFRQUJBb0lCQVFESys1WFd1cUtPdFpPLwpRUmNuc1dMb25WcUtsVkUwMjJKUzRKUmNWY1k3SG5ndytmUXM5bXRlT3V2SnNGS21mSTBsVUlwZit4VzE5R2JGCkFYSGpEcytBeWIwTXBDS25LSWQ2RklpdGxOdXJPNTZjRmhjbEJhTEMzL0o1SlBGenZDeVlPdURsOW1oY09KNnkKY2tEbS9Db21xZkltV1N0VEZYc2NsbnVKVE40RGxUeW5jWkhkTDhEM1dGeWRCVENMeFY2dlA1UmlQZEhNU0Z0WQowR0UwT2ZoZXIwWWxPN0IwWWRMUmowV0k1SnNLNjJwNUZjZ1piT21KQnBPWXdvUVVIdFBVZ1RkQ2YzblV5SHhuClliaTRuZS81RmlORGNmSkRRS05jRytMOUFBcUozNTFjUm5lbzFQSE45Q0JmamxVWUxaR2lsSTRUQlhUb0ZvaHcKV2Z2S09nMjVBb0dCQU52MytDaE0rdk1qV1RrRnVSajVvN0psVnlrNHF5VzBML0NXV0hXZkE1REZCb3c1M3RyYwowSHp4SFYxejBCWFYwczRITlI3ejJtcFRPYU9OU2ZYTHUxcDA3SzFqV2g2VlpwQTBxZ2plVGlsSUxLdTh4c2tICmw2K1ZyUmNoQWdFRTdXWXMyd2J4Mk9yL3FsaGwxSlVpbkJlY3huOE5Lc1lrTWt4TGEwUXkzT2JQQW9HQkFQOE0KU1c3NzR1Nk0rRkcwbnZ0dkNVZW1mTmhTYjdGVEQ5WlU3VjJsTXIxOWRzNlZDL3BkUG8ydm9XRXNYamtpVGFrUwpzUVRKTlpxM0dRRUdjY0NkWE1FOW94WFlEQ2ZEL3AzMkVpcVlIZzJMYkFvdFgwVnJ5bTFwQ0tDWGQrSXM3b1lkCnBWWEd5NzFTRFpyK2hnaXFYMEJVeHFEeTloMFNJcFZ1a0NYSWtXQi9Bb0dCQU1ZSTF4ZWhSb1RESEQ2a0VtS1QKelhaOG1oMzRjTXovRGZIeHlTNEx2UEFIRWNBSkVjUEU3TWF2WkpxUCs1VE03bjZpS29iMVQzeE45U1J6dlZSVwoyUk8xRktkOVBOTXYraWgxNFdjZWpRdkplTDRjdEhLa0xVSGM1UHBmc3lncndYY3RodnNYblF6a28vMzFuNCtzCm13Ny9EQTJ5VXdJVDhGeVR3YnlpZGhJdEFvR0FGdFFZdHBCaExZejhwUU9QdjEyZTdRVGY0OVR0SG1nYTRNcFYKUEs2T3JodE95UXJhT1p5aS9yZWJzRUR5WmhiRjhMNDFqZ0ljaEM2alZFNHBYRjQ1Y1NwOU1IVllFUzhmMlMrdgpUSlMxQysxUXpGQm5XS1ZmUncvQnIrNGUwdVhHcThaM2lBZjFNSXJwb05mclUxYzhrMXVETStETFdxckc0YTAxCnhjd0FCeTBDZ1lFQWlHS2xzNDF0U1E5YTVnSWNRSnM5RGVpRU1rckJuVzllVkF2djZxaXZqVGw3VWNHWTErWWgKWGs0cXJPMFcxQmhSUHp0dHp1ZU82Z2pFakswdFpheHovUjBEQ1Z4MlhaWngzdFNsc0FBZ1IrNjFjZUhsYjlZbwp6dythU1EzdUYyTkhDNTg1MHdsUWZFOStiZjdIWDhMU2crK3d0d0dOeEdkYXp5Q2xFcUlCUjNvPQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURaakNDQWs2Z0F3SUJBZ0lRRnZMREttczFReXBEcGhETXo0Q1h1REFOQmdrcWhraUc5dzBCQVFzRkFEQWkKTVNBd0hnWURWUVFERXhkaFpHMXBjM05wYjI0dFkyOXVkSEp2Ykd4bGNpMWpZVEFlRncweU1EQXlNRGt3TlRNeApNRFphRncwek1EQXlNRFl3TlRNeE1EWmFNQ1F4SWpBZ0JnTlZCQU1UR1c1emJTMWhaRzFwYzNOcGIyNHRkMlZpCmFHOXZheTF6ZG1Nd2dnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUURiSm83bzJWRFIKYW45dkpacDNqaE5rS1p6dEplRU4wNjVQd044emxqMkdyZEY5TUFwSkk2dm94OWVad1hNNGdCWkdmSzM5KzFubwp4NmF6SzNFMEdwQWxmU0xBbWd3a2xnZWVlb2lJT2QzdzkybXhma1daVmpXcDA0RWx3bXZRaFJEL1hYeG4rcnJPCkIySmFQT1U1cDhMeDhKb05PUC8rSFRGeHR0YWdpL3FBcGpzZnRrR08zVC9vaktzcU9wVDVUZUx0NzlhOG5mazkKVzZrUXVMQTVHYWZkSHQxbmNMdE1pazFWdnAxQ1NYZS9yeUJXQjlsMXJRMDBiZGE4TWRvTXNrandLZ291M21UZAo2Yy9PMXhkVGRzQmtPLzF3VG96S09NVHFRdFY5ZnptRHZCOEVPMHlNa1BjY2JadndzM2hBZHAraFdOVTc1eUIwClRHNjArVU9GWXlDeEFnTUJBQUdqZ1pVd2daSXdEZ1lEVlIwUEFRSC9CQVFEQWdXZ01CMEdBMVVkSlFRV01CUUcKQ0NzR0FRVUZCd01CQmdnckJnRUZCUWNEQWpBTUJnTlZIUk1CQWY4RUFqQUFNRk1HQTFVZEVRUk1NRXFDSVc1egpiUzFoWkcxcGMzTnBiMjR0ZDJWaWFHOXZheTF6ZG1NdVpHVm1ZWFZzZElJbGJuTnRMV0ZrYldsemMybHZiaTEzClpXSm9iMjlyTFhOMll5NWtaV1poZFd4MExuTjJZekFOQmdrcWhraUc5dzBCQVFzRkFBT0NBUUVBWlBmOEE2SXcKRldoYkFiU0s4R0hqMmJ4T1hTZ3NtbkNLeVJyNG9PaUxnOFlDNTZZZ2JESm1OVDlld0IrRzNBSXpBMzNuRkZmMApaYTN6RUswQTRhOHJPQklFNWZHUEY2ZE5rcUF2STRsUXBxL0JiaXM4RllxZHlqV3RCNDRsZEJPMDJHa2ZEYkprCnBBcTFvSG9ValFmVTdrcGsyZ0ZVSzc0NDMzSldtSG11ckZsRTY5Q1RVY0dYdG03Qis4eFBqYzErWis2RUtMMFIKaW96dGFleEJwZDNoME9nWURzOGs2Z1FEdmZvckFTQmVVUzFGZHI2NVFNWFlUdS9pYnJBeTJPYnlSL0t2S3Roagp5OW9UYnBvVlZJbHVDU0F1aGNLSVpXVk9HTjIyUnQzdmxWempUdzZjejJ1a0MyQlpIVmhhdWVjQTJKcUQxM09FCnN2ejl5WldWNDRObHFRPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
---
# Source: nsm/charts/config/templates/nsm-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: nsm-config
data:
  excluded_prefixes.yaml: ''
---
# Source: nsm/templates/service-accounts.tpl
apiVersion: v1
kind: ServiceAccount
metadata:
  name: nse-acc
  namespace: default
---
# Source: nsm/templates/service-accounts.tpl
apiVersion: v1
kind: ServiceAccount
metadata:
  name: nsc-acc
  namespace: default
---
# Source: nsm/templates/service-accounts.tpl
apiVersion: v1
kind: ServiceAccount
metadata:
  name: nsmgr-acc
  namespace: default
---
# Source: nsm/templates/service-accounts.tpl
apiVersion: v1
kind: ServiceAccount
metadata:
  name: forward-plane-acc
  namespace: default
---
# Source: nsm/charts/config/templates/crd-networkserviceendpoints.yaml
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: networkserviceendpoints.networkservicemesh.io
spec:
  conversion:
    strategy: None
  group: networkservicemesh.io
  names:
    kind: NetworkServiceEndpoint
    listKind: NetworkServiceEndpointList
    plural: networkserviceendpoints
    shortNames:
      - nse
      - nses
    singular: networkserviceendpoint
  scope: Namespaced
  version: v1alpha1
  versions:
    - name: v1alpha1
      served: true
      storage: true
---
# Source: nsm/charts/config/templates/crd-networkservicemanagers.yaml
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: networkservicemanagers.networkservicemesh.io
spec:
  conversion:
    strategy: None
  group: networkservicemesh.io
  names:
    kind: NetworkServiceManager
    listKind: NetworkServiceManagerList
    plural: networkservicemanagers
    shortNames:
      - nsm
      - nsms
    singular: networkservicemanager
  scope: Namespaced
  version: v1alpha1
  versions:
    - name: v1alpha1
      served: true
      storage: true
---
# Source: nsm/charts/config/templates/crd-networkservices.yaml
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: networkservices.networkservicemesh.io
spec:
  conversion:
    strategy: None
  group: networkservicemesh.io
  names:
    kind: NetworkService
    listKind: NetworkServiceList
    plural: networkservices
    shortNames:
      - netsvc
      - netsvcs
    singular: networkservice
  scope: Namespaced
  version: v1alpha1
  versions:
    - name: v1alpha1
      served: true
      storage: true
---
# Source: nsm/charts/config/templates/cluster-role-admin.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: nsm-role
  labels:
    rbac.authorization.k8s.io/aggregate-to-admin: "true"
    rbac.authorization.k8s.io/aggregate-to-edit: "true"
rules:
  - apiGroups: ["networkservicemesh.io"]
    resources:
      - "networkservices"
      - "networkserviceendpoints"
      - "networkservicemanagers"
    verbs: ["*"]
  - apiGroups: ["apiextensions.k8s.io"]
    resources: ["customresourcedefinitions"]
    verbs: ["*"]
  - apiGroups: [""]
    resources: ["configmaps"]
    verbs: ["get", "update"]
  - apiGroups: [""]
    resources: ["nodes", "services", "namespaces"]
    verbs: ["get", "list", "watch"]
---
# Source: nsm/charts/config/templates/cluster-role-view.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: aggregate-network-services-view
  labels:
    # Add these permissions to the "view" default role.
    rbac.authorization.k8s.io/aggregate-to-view: "true"
rules:
  - apiGroups: ["networkservicemesh.io"]
    resources: ["networkservices"]
    verbs: ["get", "list", "watch"]
---
# Source: nsm/charts/config/templates/cluster-role-binding.tpl
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: nsm-role-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: nsm-role
subjects:
  - kind: ServiceAccount
    name: nsmgr-acc
    namespace: default
---
# Source: nsm/charts/admission-webhook/templates/admission-webhook-secret.tpl
apiVersion: v1
kind: Service
metadata:
  name: nsm-admission-webhook-svc
  namespace: default
  labels:
    app: nsm-admission-webhook
spec:
  ports:
    - port: 443
      targetPort: 443
  selector:
    app: nsm-admission-webhook
---
# Source: nsm/templates/forwarding-plane.tpl
apiVersion: apps/v1
kind: DaemonSet
spec:
  selector:
    matchLabels:
      app: nsm-vpp-plane
  template:
    metadata:
      labels:
        app: nsm-vpp-plane
    spec:
      hostPID: true
      hostNetwork: true
      serviceAccount: forward-plane-acc
      containers:
        - name: vppagent-forwarder
          securityContext:
            privileged: true
          image: docker.io/networkservicemesh/vppagent-forwarder:master
          imagePullPolicy: IfNotPresent
          env:
            - name: INSECURE
              value: "false"
            - name: METRICS_COLLECTOR_ENABLED
              value: "false"
            - name: TRACER_ENABLED
              value: "false"
            - name: JAEGER_AGENT_HOST
              value: jaeger.nsm-system
            - name: JAEGER_AGENT_PORT
              value: "6831"
            - name: NSM_FORWARDER_SRC_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
          volumeMounts:
            - name: workspace
              mountPath: /var/lib/networkservicemesh/
              mountPropagation: Bidirectional
            - name: spire-agent-socket
              mountPath: /run/spire/sockets
              readOnly: true
          livenessProbe:
            httpGet:
              path: /liveness
              port: 5555
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 3
          readinessProbe:
            httpGet:
              path: /readiness
              port: 5555
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 3
      volumes:
        - hostPath:
            path: /var/lib/networkservicemesh
            type: DirectoryOrCreate
          name: workspace
        - hostPath:
            path: /run/spire/sockets
            type: DirectoryOrCreate
          name: spire-agent-socket
metadata:
  name: nsm-vpp-forwarder
  namespace: default
---
# Source: nsm/templates/nsmgr.tpl
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: nsmgr
  namespace: default
spec:
  selector:
    matchLabels:
      app: nsmgr-daemonset
  template:
    metadata:
      labels:
        app: nsmgr-daemonset
    spec:
      serviceAccount: nsmgr-acc
      containers:
        - name: nsmdp
          image: docker.io/networkservicemesh/nsmdp:master
          imagePullPolicy: IfNotPresent
          env:
            - name: INSECURE
              value: "false"
            - name: TRACER_ENABLED
              value: "false"
            - name: JAEGER_AGENT_HOST
              value: jaeger.nsm-system
            - name: JAEGER_AGENT_PORT
              value: "6831"
          ports:
            - containerPort: 5001
              hostPort: 5001
          volumeMounts:
            - name: kubelet-socket
              mountPath: /var/lib/kubelet/device-plugins
            - name: nsm-socket
              mountPath: /var/lib/networkservicemesh
            - name: spire-agent-socket
              mountPath: /run/spire/sockets
              readOnly: true
        - name: nsmd
          image: docker.io/networkservicemesh/nsmd:master
          imagePullPolicy: IfNotPresent
          env:
            - name: INSECURE
              value: "false"
            - name: TRACER_ENABLED
              value: "false"
            - name: JAEGER_AGENT_HOST
              value: jaeger.nsm-system
            - name: JAEGER_AGENT_PORT
              value: "6831"
          volumeMounts:
            - name: nsm-socket
              mountPath: /var/lib/networkservicemesh
            - name: spire-agent-socket
              mountPath: /run/spire/sockets
              readOnly: true
            - name: nsm-config-volume
              mountPath: /var/lib/networkservicemesh/config
          livenessProbe:
            httpGet:
              host: "127.0.0.1"
              path: /liveness
              port: 5555
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 3
          readinessProbe:
            httpGet:
              host: "127.0.0.1"
              path: /readiness
              port: 5555
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 3
        - name: nsmd-k8s
          image: docker.io/networkservicemesh/nsmd-k8s:master
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: spire-agent-socket
              mountPath: /run/spire/sockets
              readOnly: true
          env:
            - name: INSECURE
              value: "false"
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_UID
              valueFrom:
                fieldRef:
                  fieldPath: metadata.uid
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: TRACER_ENABLED
              value: "false"
            - name: JAEGER_AGENT_HOST
              value: jaeger.nsm-system
            - name: JAEGER_AGENT_PORT
              value: "6831"
      volumes:
        - hostPath:
            path: /var/lib/kubelet/device-plugins
            type: DirectoryOrCreate
          name: kubelet-socket
        - hostPath:
            path: /var/lib/networkservicemesh
            type: DirectoryOrCreate
          name: nsm-socket
        - name: nsm-config-volume
          configMap:
            name: nsm-config
        - hostPath:
            path: /run/spire/sockets
            type: DirectoryOrCreate
          name: spire-agent-socket
---
# Source: nsm/charts/admission-webhook/templates/admission-webhook-secret.tpl
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nsm-admission-webhook
  namespace: default
  labels:
    app: nsm-admission-webhook
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nsm-admission-webhook
  template:
    metadata:
      labels:
        app: nsm-admission-webhook
    spec:
      containers:
        - name: nsm-admission-webhook
          image: docker.io/networkservicemesh/admission-webhook:master
          imagePullPolicy: IfNotPresent
          env:
            - name: REPO
              value: "networkservicemesh"
            - name: TAG
              value: "master"
            - name: NSM_NAMESPACE
              value: "nsm-system"
            - name: TRACER_ENABLED
              value: "false"
            - name: JAEGER_AGENT_HOST
              value: jaeger.nsm-system
            - name: JAEGER_AGENT_PORT
              value: "6831"
          volumeMounts:
            - name: webhook-certs
              mountPath: /etc/webhook/certs
              readOnly: true
          livenessProbe:
            httpGet:
              path: /liveness
              port: 5555
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 3
          readinessProbe:
            httpGet:
              path: /readiness
              port: 5555
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 3
      volumes:
        - name: webhook-certs
          secret:
            secretName: nsm-admission-webhook-certs
---
# Source: nsm/charts/prefix-service/templates/deployment.tpl
apiVersion: apps/v1
kind: Deployment
metadata:
  name: prefix-service
spec:
  selector:
    matchLabels:
      app:  prefix-service
  template:
    metadata:
      labels:
        app: prefix-service
    spec:
      serviceAccountName: nsmgr-acc
      containers:
        - name: prefix-service
          image: docker.io/networkservicemesh/prefix-service:master
          imagePullPolicy: IfNotPresent
---
# Source: nsm/charts/admission-webhook/templates/admission-webhook-secret.tpl
apiVersion: admissionregistration.k8s.io/v1beta1
kind: MutatingWebhookConfiguration
metadata:
  name: nsm-admission-webhook-cfg
  namespace: default
  labels:
    app: nsm-admission-webhook
webhooks:
  - name: admission-webhook.networkservicemesh.io
    clientConfig:
      service:
        name: nsm-admission-webhook-svc
        namespace: default
        path: "/mutate"
      caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFRENDQWZpZ0F3SUJBZ0lRSHRhTEZaN0VxZ0ZkY0ZacWhaTCtzREFOQmdrcWhraUc5dzBCQVFzRkFEQWkKTVNBd0hnWURWUVFERXhkaFpHMXBjM05wYjI0dFkyOXVkSEp2Ykd4bGNpMWpZVEFlRncweU1EQXlNRGt3TlRNeApNRFphRncwek1EQXlNRFl3TlRNeE1EWmFNQ0l4SURBZUJnTlZCQU1URjJGa2JXbHpjMmx2YmkxamIyNTBjbTlzCmJHVnlMV05oTUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUF5QkpwcWdQVGNCRzMKS1d5bHJkNkFVUlFjU2UvTUxlamVneVZiZFUrc3dreVpQNXpiVDBNNlBOTHhSQ3dkVFZNV3A2dkFKaDBBRmNLVwoyMTIraGVlY1NuaEhseHlvWkxaUG5mT2d4UFNrOUo0T0UzSTU1YTg0MmlaaUg2ODJJa3E1YXNQb0JQWHpUYXJiCkp5OWpmVy9FODRSc3ZiM1N0cit2enlzai9iWkdtdzQzM0NEdXNqQmhid09IZjJmMTQ4UndkazFBQUNUZDF3NnoKSFRMek4yVW9IVmdwRzZNaFlncjh1TG1PNFFieVJsd2ppemlrVTRVa2JobEp5dGwvY1J2b1VvUWpkRUhGUzhXYwpzSlIzQzRkOTlJQVA5anR3eWwxSW15aU5FdzBja0VrL1cweTZJV3c5QlN6WFN3MnI3QmxuN2daTGdCeG1RWVVXCmRyRktEZU9IQXdJREFRQUJvMEl3UURBT0JnTlZIUThCQWY4RUJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUIKQlFVSEF3RUdDQ3NHQVFVRkJ3TUNNQThHQTFVZEV3RUIvd1FGTUFNQkFmOHdEUVlKS29aSWh2Y05BUUVMQlFBRApnZ0VCQUhVSExiV01KbGE3M1c2TzFnZ1hveHN1dk9FVjJJYkZNank5VDNURm50S0NsOG1MY3Q2MERaSjg3Rmh6CnR6MFlvemhFZVpoODB5aXhFV1Noa2ZRZGVwcVdaMnhydXZ6eGNKY1ZGTFNSWFdwSkhhVUd4NXBHWEZoTWxqcjIKajJ0LzhHTnQ4MmRvWlFnSFB6QVdBaktTYXJJS2VLakZWditGUUFvZXFQKzB4M1grR1Vsays4R2p3Y0pSaGU4ZgpkOXVTTlJDaHJsL3Z0bzdNVVBHK0RZbCtKY0F0RU1DUFBNaFl3SXJOZGlUUVlvUFBtKzZ3eWwxVnZkRksxOHljClByc1lNMWV0d0hzWmI5Q25uU3c1bWZZVzlkd3NlSWttNGhhNm9FYnVmUUFUVHVpZE5PZmM5enFGdlpaQTFaOGYKT0s2NmVMOS9pcmhJN2xpR0h5cDY5dkgxUXhFPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
    rules:
      - operations: ["CREATE"]
        apiGroups: ["apps", "extensions", ""]
        apiVersions: ["v1", "v1beta1"]
        resources: ["deployments", "services", "pods"]

